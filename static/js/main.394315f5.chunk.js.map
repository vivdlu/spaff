{"version":3,"sources":["components/RatingDialsComponent.js","components/BeforeCodingComponent.js","components/DownloadFileComponent.js","components/AfterCodingComponent.js","shared/codes.js","shared/importedRatings.js","shared/exportedRatings.js","components/RatingConsoleComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["RatingDials","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","codes","_this2","showButtons","map","code","react_default","a","createElement","react","key","id","Button","color","onClick","ratingChange","bind","className","description","Component","BeforeCodingModal","modal","playing","src","coderName","codedCouple","codedPartner","onNameChange","assertThisInitialized","onCoupleChange","onPartnerChange","onSrcChange","startCoding","event","setState","target","value","nameChange","coupleChange","partnerChange","srcChange","Modal","isOpen","ModalHeader","ModalBody","Form","Row","Col","FormGroup","Label","for","Input","type","name","onChange","sm","check","ModalFooter","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Download","filename","String","toUpperCase","element","data","exportedRatings","label","React","AfterCodingModal","endModalToggle","toggle","DownloadFileComponent","CODES","importedRatings","RatingConsole","currentTime","currentCode","endModal","Player","createRef","handleRatingChange","handleTimeChange","handleNameChange","handleCoupleChange","handlePartnerChange","handleSrcChange","handleVideoEnd","newCode","current","Math","round","getCurrentTime","push","i","length","lineRating","j","newName","newCouple","newPartner","newSrc","BeforeCodingComponent","ReactPlayer_default","ref","url","controls","width","height","onProgress","onEnded","RatingDialsComponent","AfterCodingComponent","Main","Navbar","NavbarBrand","href","RatingConsoleComponent","App","MainComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2YA8BeA,cAzBb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAOR,EAAKD,MAAMS,OAHLR,wEAOV,IAAAS,EAAAN,KAEDO,EAAcP,KAAKJ,MAAMS,MAAMG,IAAI,SAACC,GACxC,OACEC,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAUC,IAAKL,EAAKM,IAClBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQC,MAAM,UAAWC,QAASZ,EAAKV,MAAMuB,aAAaC,KAAK,KAAMX,EAAKM,KAAMN,EAAKM,GAAGL,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,KAAGS,UAAU,aAAaZ,EAAKa,iBAKnI,OACEZ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACZd,UArBiBgB,uGCqIXC,cApIb,SAAAA,EAAY5B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwB,IACjB3B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0B,GAAArB,KAAAH,KAAMJ,KACDQ,MAAQ,CACXqB,OAAO,EACPC,SAAS,EACTC,IAAK,GACLC,UAAW,GACXC,YAAa,GACbC,aAAc,IAEhBjC,EAAKkC,aAAelC,EAAKkC,aAAaX,KAAlBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IACpBA,EAAKoC,eAAiBpC,EAAKoC,eAAeb,KAApBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IACtBA,EAAKqC,gBAAkBrC,EAAKqC,gBAAgBd,KAArBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IACvBA,EAAKsC,YAActC,EAAKsC,YAAYf,KAAjBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IACnBA,EAAKuC,YAAcvC,EAAKuC,YAAYhB,KAAjBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IAdFA,4EAiBNwC,GACXrC,KAAKsC,SAAS,CACZV,UAAWS,EAAME,OAAOC,+CAIbH,GACbrC,KAAKsC,SAAS,CACZT,YAAaQ,EAAME,OAAOC,gDAIdH,GACdrC,KAAKsC,SAAS,CACZR,aAAcO,EAAME,OAAOC,4CAInBH,GACVrC,KAAKsC,SAAS,CACZX,IAAKU,EAAME,OAAOC,8CAKpBxC,KAAKJ,MAAM6C,WAAWzC,KAAKI,MAAMwB,WACjC5B,KAAKJ,MAAM8C,aAAa1C,KAAKI,MAAMyB,aACnC7B,KAAKJ,MAAM+C,cAAc3C,KAAKI,MAAM0B,cACpC9B,KAAKJ,MAAMgD,UAAU5C,KAAKI,MAAMuB,KAChC3B,KAAKsC,SAAS,CACZb,OAAQzB,KAAKI,MAAMqB,MACnBC,SAAS,qCAIJ,IAAApB,EAAAN,KACP,OACEU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,OAAQ9C,KAAKI,MAAMqB,MAAOJ,UAAWrB,KAAKJ,MAAMyB,WACrDX,EAAAC,EAAAC,cAACmC,EAAA,EAAD,qBACArC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACE1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAOC,IAAI,aAAX,cACA5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,YACL1C,GAAG,YACH2C,SAAU,SAACrB,GAAD,OAAW/B,EAAKyB,aAAaM,QAI7C3B,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACEzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACE1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAOC,IAAI,aAAX,WACA5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,cACL1C,GAAG,cACH2C,SAAU,SAACrB,GAAD,OAAW/B,EAAK2B,eAAeI,SAKjD3B,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACExC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAKQ,GAAI,GACPjD,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACA1C,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAWQ,OAAK,GACdlD,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAOO,OAAK,GACVlD,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,SACLjB,MAAM,OACNkB,SAAU,SAACrB,GAAD,OAAW/B,EAAK4B,gBAAgBG,MAAW,IALzD,SASF3B,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAWQ,OAAK,GACdlD,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAOO,OAAK,GACVlD,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,SACLjB,MAAM,QACNkB,SAAU,SAACrB,GAAD,OAAW/B,EAAK4B,gBAAgBG,MAAW,IALzD,YAWN3B,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAKQ,GAAI,GACPjD,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACE1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAOC,IAAI,YAAX,eACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACEC,KAAK,MACLC,KAAK,MACL1C,GAAG,WACH2C,SAAU,SAACrB,GAAD,OAAW/B,EAAK6B,YAAYE,WAOlD3B,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACEnD,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAASlB,KAAKoC,aAAxC,gBAA2E,cA7HvDb,8BCC1BuC,EAAYC,IAAYD,UACxBE,EAAaD,IAAYD,UAAUE,WACnCC,EAAcF,IAAYD,UAAUG,YA+B3BC,mLAzBX,IAAIC,EAAWC,OAAO,SAAWpE,KAAKJ,MAAMgC,UAAY,IAAM5B,KAAKJ,MAAMiC,YAAc,IAAM7B,KAAKJ,MAAMkC,aAAauC,eACrH,OACE3D,EAAAC,EAAAC,cAACkD,EAAD,CACEK,SAAUA,EACVG,QACE5D,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQC,MAAM,aAAd,aAEFP,EAAAC,EAAAC,cAACoD,EAAD,CAAYO,KAAMvE,KAAKJ,MAAM4E,gBAAiBf,KAAK,SAC/C/C,EAAAC,EAAAC,cAACqD,EAAD,CAAaQ,MAAM,OAAOjC,MAAM,SAChC9B,EAAAC,EAAAC,cAACqD,EAAD,CAAaQ,MAAM,IAAIjC,MAAM,MAC7B9B,EAAAC,EAAAC,cAACqD,EAAD,CAAaQ,MAAM,IAAIjC,MAAM,MAC7B9B,EAAAC,EAAAC,cAACqD,EAAD,CAAaQ,MAAM,IAAIjC,MAAM,MAC7B9B,EAAAC,EAAAC,cAACqD,EAAD,CAAaQ,MAAM,IAAIjC,MAAM,MAC7B9B,EAAAC,EAAAC,cAACqD,EAAD,CAAaQ,MAAM,IAAIjC,MAAM,MAC7B9B,EAAAC,EAAAC,cAACqD,EAAD,CAAaQ,MAAM,IAAIjC,MAAM,MAC7B9B,EAAAC,EAAAC,cAACqD,EAAD,CAAaQ,MAAM,IAAIjC,MAAM,MAC7B9B,EAAAC,EAAAC,cAACqD,EAAD,CAAaQ,MAAM,IAAIjC,MAAM,MAC7B9B,EAAAC,EAAAC,cAACqD,EAAD,CAAaQ,MAAM,IAAIjC,MAAM,MAC7B9B,EAAAC,EAAAC,cAACqD,EAAD,CAAaQ,MAAM,KAAKjC,MAAM,gBAtBnBkC,IAAMnD,WCoBdoD,mLArBX,OACEjE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,OAAQ9C,KAAKJ,MAAMgF,eAAgBvD,UAAWrB,KAAKJ,MAAMyB,WAC9DX,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAa8B,OAAQ7E,KAAK6E,QAA1B,oBACAnE,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACGhD,KAAKJ,MAAMgC,UADd,gCACsD5B,KAAKJ,MAAMkC,aADjE,sBACkG9B,KAAKJ,MAAMiC,YAD7G,uCAGAnB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACEnD,EAAAC,EAAAC,cAACkE,EAAD,CACEN,gBAAiBxE,KAAKJ,MAAM4E,gBAC5B5C,UAAW5B,KAAKJ,MAAMgC,UACtBC,YAAa7B,KAAKJ,MAAMiC,YACxBC,aAAc9B,KAAKJ,MAAMkC,yBAfRP,aCJlBwD,EACb,CACE,CACEhE,GAAI,EACJO,YAAY,yCAEd,CACEP,GAAI,EACJO,YAAY,4CAEd,CACEP,GAAI,EACJO,YAAY,0CAEd,CACEP,GAAI,EACJO,YAAY,kCAEd,CACEP,GAAI,EACJO,YAAY,gCAEd,CACEP,GAAI,EACJO,YAAY,WAEd,CACEP,GAAI,EACJO,YAAY,+BAEd,CACEP,GAAI,EACJO,YAAY,uCAEd,CACEP,GAAI,EACJO,YAAY,yCAEd,CACEP,GAAI,GACJO,YAAY,wCCxCL0D,EAAkB,GCAlBR,EAAkB,GCiIdS,cAtHb,SAAAA,EAAYrF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,IACfpF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmF,GAAA9E,KAAAH,KAAMJ,KACDQ,MAAQ,CACX8E,YAAa,EACbC,YAAa,EACb9E,MAAO0E,EACPpD,IAAK,GACLC,UAAW,GACXC,YAAa,GACbC,aAAc,GACdJ,SAAS,EACT0D,UAAU,GAEZvF,EAAKwF,OAASX,IAAMY,YACpBzF,EAAK0F,mBAAqB1F,EAAK0F,mBAAmBnE,KAAxBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IAC1BA,EAAK2F,iBAAmB3F,EAAK2F,iBAAiBpE,KAAtBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IACxBA,EAAK4F,iBAAmB5F,EAAK4F,iBAAiBrE,KAAtBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IACxBA,EAAK6F,mBAAqB7F,EAAK6F,mBAAmBtE,KAAxBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IAC1BA,EAAK8F,oBAAsB9F,EAAK8F,oBAAoBvE,KAAzBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IAC3BA,EAAK+F,gBAAkB/F,EAAK+F,gBAAgBxE,KAArBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IACvBA,EAAKgG,eAAiBhG,EAAKgG,eAAezE,KAApBtB,OAAAkC,EAAA,EAAAlC,CAAAD,IApBPA,kFAuBEiG,GACjB9F,KAAKsC,SAAS,CACZ6C,YAAaW,+CAKf,IAAMT,EAASrF,KAAKqF,OAAOU,QAC3B/F,KAAKsC,SAAS,CACZ4C,YAAac,KAAKC,MAAMZ,EAAOa,kBAAoB,MAErDlB,EAAgBmB,KAAKnG,KAAKI,OAC1B,IAAK,IAAIgG,EAAI,EAAGA,EAAIpB,EAAgBqB,OAAQD,IAAK,CAC/C,IAAIE,EAAa,GACjBA,EAAU,KAAWtB,EAAgBoB,GAAGlB,YACxC,IAAK,IAAIqB,EAAI,EAAGA,EAAI,GAAIA,IAClBvB,EAAgBoB,GAAGjB,cAAgBoB,EACrCD,EAAWC,GAAK,EAEhBD,EAAWC,GAAK,EAGpB/B,EAAgB4B,GAAKE,4CAIRE,GACfxG,KAAKsC,SAAS,CACZV,UAAW4E,+CAIIC,GACjBzG,KAAKsC,SAAS,CACZT,YAAa4E,gDAIGC,GAClB1G,KAAKsC,SAAS,CACZR,aAAc4E,4CAIFC,GACd3G,KAAKsC,SAAS,CACZX,IAAKgF,EACLjF,SAAS,6CAKX1B,KAAKsC,SAAS,CACZ8C,UAAU,qCAKZ,OACE1E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgG,EAAD,CACEnE,WAAYzC,KAAKyF,iBACjB/C,aAAc1C,KAAK0F,mBACnB/C,cAAe3C,KAAK2F,oBACpB/C,UAAW5C,KAAK4F,kBAElBlF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACbX,EAAAC,EAAAC,cAACiG,EAAAlG,EAAD,CACEU,UAAU,SACVyF,IAAK9G,KAAKqF,OACV0B,IAAK/G,KAAKI,MAAMuB,IAChBqF,UAAU,EACVC,MAAM,OACNC,OAAO,MACPxF,QAAS1B,KAAKI,MAAMsB,QACpByF,WAAYnH,KAAKwF,iBACjB4B,QAASpH,KAAK6F,kBAGlBnF,EAAAC,EAAAC,cAACyG,EAAD,CACElG,aAAcnB,KAAKuF,mBACnBlF,MAAOL,KAAKI,MAAMC,QAEpBK,EAAAC,EAAAC,cAAC0G,EAAD,CACE9C,gBAAiBA,EACjBI,eAAgB5E,KAAKI,MAAMgF,SAC3BxD,UAAW5B,KAAKI,MAAMwB,UACtBC,YAAa7B,KAAKI,MAAMyB,YACxBC,aAAc9B,KAAKI,MAAM0B,uBAjHTP,+BCYbgG,mLAbX,OACE7G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KACE9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAaC,KAAK,KAAlB,qBAEFhH,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACbX,EAAAC,EAAAC,cAAC+G,EAAD,eAVSpG,aCYJqG,2LARX,OACElH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiH,EAAD,cALUtG,cCOEuG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO1H,EAAAC,EAAAC,cAACyH,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.394315f5.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Button } from 'reactstrap';\n\nclass RatingDials extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        codes: this.props.codes\n      };\n    }\n\n  render() {\n\n    const showButtons = this.props.codes.map((code) => {\n      return (\n        <Fragment key={code.id}>\n          <Button color=\"primary\"  onClick={this.props.ratingChange.bind(null, code.id)}>{code.id}<br /><p className=\"code-desc\">{code.description}</p></Button>\n        </Fragment>\n      );\n    });\n\n    return (\n      <div className=\"row\">\n        {showButtons}\n      </div>\n    )\n  }\n}\n\nexport default RatingDials;\n","import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\n\nclass BeforeCodingModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true,\n      playing: false,\n      src: \"\",\n      coderName: \"\",\n      codedCouple: \"\",\n      codedPartner: \"\"\n    };\n    this.onNameChange = this.onNameChange.bind(this);\n    this.onCoupleChange = this.onCoupleChange.bind(this);\n    this.onPartnerChange = this.onPartnerChange.bind(this);\n    this.onSrcChange = this.onSrcChange.bind(this);\n    this.startCoding = this.startCoding.bind(this);\n  }\n\n  onNameChange(event) {\n    this.setState({\n      coderName: event.target.value\n    });\n  }\n\n  onCoupleChange(event) {\n    this.setState({\n      codedCouple: event.target.value\n    });\n  }\n\n  onPartnerChange(event) {\n    this.setState({\n      codedPartner: event.target.value\n    });\n  }\n\n  onSrcChange(event) {\n    this.setState({\n      src: event.target.value\n    });\n  }\n\n  startCoding() {\n    this.props.nameChange(this.state.coderName);\n    this.props.coupleChange(this.state.codedCouple);\n    this.props.partnerChange(this.state.codedPartner);\n    this.props.srcChange(this.state.src);\n    this.setState({\n      modal: !this.state.modal,\n      playing: true\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal isOpen={this.state.modal} className={this.props.className}>\n          <ModalHeader>Begin Coding</ModalHeader>\n          <ModalBody>\n            <Form>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"coderName\">Your Name:</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"coderName\"\n                      id=\"coderName\"\n                      onChange={(event) => this.onNameChange(event)}\n                      />\n                  </FormGroup>\n                </Col>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"coderName\">Couple:</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"codedCouple\"\n                      id=\"codedCouple\"\n                      onChange={(event) => this.onCoupleChange(event)}\n                      />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <FormGroup>\n                  <legend>Partner:</legend>\n                  <FormGroup check>\n                    <Label check>\n                      <Input\n                        type=\"radio\"\n                        name=\"radio1\"\n                        value=\"left\"\n                        onChange={(event) => this.onPartnerChange(event)} />{' '}\n                      Left\n                    </Label>\n                  </FormGroup>\n                  <FormGroup check>\n                    <Label check>\n                      <Input\n                        type=\"radio\"\n                        name=\"radio1\"\n                        value=\"right\"\n                        onChange={(event) => this.onPartnerChange(event)} />{' '}\n                      Right\n                    </Label>\n                  </FormGroup>\n                </FormGroup>\n              </Col>\n              <Col sm={9}>\n                <FormGroup>\n                  <Label for=\"videoUrl\">Video Link:</Label>\n                    <Input\n                      type=\"url\"\n                      name=\"url\"\n                      id=\"videoUrl\"\n                      onChange={(event) => this.onSrcChange(event)}\n                    />\n                </FormGroup>\n                </Col>\n              </Row>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.startCoding}>Start Coding</Button>{' '}\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default BeforeCodingModal;\n","import React from 'react';\nimport ReactExport from 'react-export-excel';\nimport { Button } from 'reactstrap';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nclass Download extends React.Component {\n\n  render() {\n\n    var filename = String(\"SPAFF_\" + this.props.coderName + \"_\" + this.props.codedCouple + \"_\" + this.props.codedPartner.toUpperCase());\n    return (\n      <ExcelFile\n        filename={filename}\n        element={\n          <Button color=\"secondary\">Download</Button>\n        }>\n        <ExcelSheet data={this.props.exportedRatings} name=\"Sheet\">\n            <ExcelColumn label=\"Time\" value=\"time\"/>\n            <ExcelColumn label=\"1\" value=\"1\"/>\n            <ExcelColumn label=\"2\" value=\"2\"/>\n            <ExcelColumn label=\"3\" value=\"3\"/>\n            <ExcelColumn label=\"4\" value=\"4\"/>\n            <ExcelColumn label=\"5\" value=\"5\"/>\n            <ExcelColumn label=\"6\" value=\"6\"/>\n            <ExcelColumn label=\"7\" value=\"7\"/>\n            <ExcelColumn label=\"8\" value=\"8\"/>\n            <ExcelColumn label=\"9\" value=\"9\"/>\n            <ExcelColumn label=\"10\" value=\"10\"/>\n        </ExcelSheet>\n      </ExcelFile>\n    );\n  }\n}\n\nexport default Download;\n","import React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Download from './DownloadFileComponent';\n\nclass AfterCodingModal extends Component {\n\n  render() {\n    return (\n      <div>\n        <Modal isOpen={this.props.endModalToggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Coding Completed</ModalHeader>\n          <ModalBody>\n            {this.props.coderName}, you've finished rating the {this.props.codedPartner} partner of couple {this.props.codedCouple}. Click to download your data file.\n          </ModalBody>\n          <ModalFooter>\n            <Download\n              exportedRatings={this.props.exportedRatings}\n              coderName={this.props.coderName}\n              codedCouple={this.props.codedCouple}\n              codedPartner={this.props.codedPartner}\n            />\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default AfterCodingModal;\n","export const CODES =\n[\n  {\n    id: 1,\n    description:'Contempt, Belligerence, Stone walling'\n  },\n  {\n    id: 2,\n    description:'Anger, L/H Dom, Criticism, Defensiveness'\n  },\n  {\n    id: 3,\n    description:'Sadness, Disappointment, Despair, Hurt'\n  },\n  {\n    id: 4,\n    description:'Victim Defen siveness, Whining'\n  },\n  {\n    id: 5,\n    description:'Fear, Tension, Worry, Stress'\n  },\n  {\n    id: 6,\n    description:'Neutral'\n  },\n  {\n    id: 7,\n    description:'Info Exchange and Responses'\n  },\n  {\n    id: 8,\n    description:'Active Interest, Curiosity, Low Val'\n  },\n  {\n    id: 9,\n    description:'Affection, Support, Empathy, High Val'\n  },\n  {\n    id: 10,\n    description:'Shared Humor, Excitement, Happiness'\n  },\n];\n","export var importedRatings = [];\n","export var exportedRatings = [];\n","import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\nimport RatingDials from './RatingDialsComponent';\nimport BeforeCodingModal from './BeforeCodingComponent';\nimport AfterCodingModal from './AfterCodingComponent';\nimport { CODES } from '../shared/codes';\nimport { importedRatings } from '../shared/importedRatings';\nimport { exportedRatings } from '../shared/exportedRatings';\n\nclass RatingConsole extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        currentTime: 0,\n        currentCode: 6,\n        codes: CODES,\n        src: \"\",\n        coderName: \"\",\n        codedCouple: \"\",\n        codedPartner: \"\",\n        playing: false,\n        endModal: false\n      };\n      this.Player = React.createRef();\n      this.handleRatingChange = this.handleRatingChange.bind(this);\n      this.handleTimeChange = this.handleTimeChange.bind(this);\n      this.handleNameChange = this.handleNameChange.bind(this);\n      this.handleCoupleChange = this.handleCoupleChange.bind(this);\n      this.handlePartnerChange = this.handlePartnerChange.bind(this);\n      this.handleSrcChange = this.handleSrcChange.bind(this);\n      this.handleVideoEnd = this.handleVideoEnd.bind(this);\n    }\n\n    handleRatingChange(newCode) {\n      this.setState({\n        currentCode: newCode\n      });\n    }\n\n    handleTimeChange() {\n      const Player = this.Player.current;\n      this.setState({\n        currentTime: Math.round(Player.getCurrentTime()) - 300,\n      });\n      importedRatings.push(this.state);\n      for (let i = 0; i < importedRatings.length; i++) {\n        let lineRating = {};\n        lineRating[\"time\"] = importedRatings[i].currentTime;\n        for (let j = 1; j < 11; j++) {\n          if (importedRatings[i].currentCode === j) {\n            lineRating[j] = 1;\n          } else {\n            lineRating[j] = 0;\n          };\n        };\n        exportedRatings[i] = lineRating;\n      };\n    }\n\n    handleNameChange(newName) {\n      this.setState({\n        coderName: newName\n      });\n    }\n\n    handleCoupleChange(newCouple) {\n      this.setState({\n        codedCouple: newCouple\n      });\n    }\n\n    handlePartnerChange(newPartner) {\n      this.setState({\n        codedPartner: newPartner\n      });\n    }\n\n    handleSrcChange(newSrc) {\n      this.setState({\n        src: newSrc,\n        playing: true\n      });\n    }\n\n    handleVideoEnd() {\n      this.setState({\n        endModal: true\n      });\n    }\n\n    render() {\n      return (\n        <div>\n          <BeforeCodingModal\n            nameChange={this.handleNameChange}\n            coupleChange={this.handleCoupleChange}\n            partnerChange={this.handlePartnerChange}\n            srcChange={this.handleSrcChange}\n            />\n          <div className=\"row\">\n            <ReactPlayer\n              className=\"player\"\n              ref={this.Player}\n              url={this.state.src}\n              controls={true}\n              width=\"100%\"\n              height=\"74%\"\n              playing={this.state.playing}\n              onProgress={this.handleTimeChange}\n              onEnded={this.handleVideoEnd}\n            />\n          </div>\n          <RatingDials\n            ratingChange={this.handleRatingChange}\n            codes={this.state.codes}\n          />\n          <AfterCodingModal\n            exportedRatings={exportedRatings}\n            endModalToggle={this.state.endModal}\n            coderName={this.state.coderName}\n            codedCouple={this.state.codedCouple}\n            codedPartner={this.state.codedPartner}\n            />\n          </div>\n      );\n    }\n}\n\nexport default RatingConsole;\n","import React, { Component } from 'react';\nimport RatingConsole from './RatingConsoleComponent';\nimport { Navbar, NavbarBrand } from 'reactstrap';\n\nclass Main extends Component {\n\n  render() {\n\n    return (\n      <div>\n        <Navbar>\n          <NavbarBrand href=\"/\">SPAFF Coding App</NavbarBrand>\n        </Navbar>\n        <div className=\"container\">\n          <RatingConsole />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport 'video-react/dist/video-react.css';\nimport Main from './components/MainComponent';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}