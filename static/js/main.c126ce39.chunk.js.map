{"version":3,"sources":["shared/codes.js","components/RatingDialsComponent.js","components/BeforeCodingComponent.js","components/DownloadFileComponent.js","components/AfterCodingComponent.js","shared/importedRatings.js","shared/exportedRatings.js","components/RatingConsoleComponent.js","components/RotateMessageComponent.js","components/NavigationComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["CODES","id","description","RatingDials","props","showButtons","map","code","react_default","a","createElement","react","key","Button","color","onClick","ratingChange","bind","className","BeforeCodingModal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","src","coderName","codedCouple","codedPartner","codedDiscussion","onNameChange","assertThisInitialized","onCoupleChange","onPartnerChange","onSrcChange","onDiscussionChange","event","setState","target","value","nameChange","coupleChange","partnerChange","discussionChange","srcChange","codingStart","_this2","Dialog","open","startModalToggle","DialogTitle","DialogContent","Grid","container","spacing","item","xs","TextField","label","margin","variant","name","onChange","FormControl","InputLabel","shrink","Select","MenuItem","DialogActions","Button_Button","startCoding","fullWidth","Component","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Download","filename","String","element","data","exportedRatings","AfterCodingModal","refreshBtn","refresh","Refresh_default","endModalToggle","DialogContentText","Typography","DownloadFileComponent","importedRatings","RatingConsole","currentTime","currentCode","startModal","endModal","Player","React","createRef","newCode","current","Math","round","getCurrentTime","push","i","length","lineRating","j","newName","newCouple","newPartner","newSrc","newDiscussion","seekTo","window","location","reload","BeforeCodingComponent","handleNameChange","handleCoupleChange","handlePartnerChange","handleSrcChange","handleDiscussionChange","handleCodingStart","ReactPlayer_default","ref","url","width","height","onStart","handleVideoStart","onProgress","handleTimeChange","onEnded","handleCodingEnd","playsinline","controls","playing","RatingDialsComponent","handleRatingChange","AfterCodingComponent","refreshPage","RotateMessage","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","message","useStyles","makeStyles","root","title","flexGrow","Navbar","classes","AppBar","position","Toolbar","Main","NavigationComponent","Container","maxWidth","lib_default","lib","orientation","alwaysRender","RotateMessageComponent","RatingConsoleComponent","App","MainComponent","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c126ce39.chunk.js","sourcesContent":["export const CODES = [\n  {\n    id: 1,\n    description: \"Contempt, Belligerence, Stone walling\"\n  },\n  {\n    id: 2,\n    description: \"Anger, L/H Dom, Criticism, Defensive\"\n  },\n  {\n    id: 3,\n    description: \"Sadness, Despair, Hurt, Disappoint ment\"\n  },\n  {\n    id: 4,\n    description: \"Non-blaming Victim Defensive, Whining\"\n  },\n  {\n    id: 5,\n    description: \"Fear, Tension, Worry, Stress\"\n  },\n  {\n    id: 6,\n    description: \"Neutral\"\n  },\n  {\n    id: 7,\n    description: \"Info Exchange and Responses\"\n  },\n  {\n    id: 8,\n    description: \"Active Interest, Curiosity, Low Val\"\n  },\n  {\n    id: 9,\n    description: \"Affection, Support, Empathy, High Val\"\n  },\n  {\n    id: 10,\n    description: \"Shared Humor, Excitement, Happiness\"\n  }\n];\n","import React, { Fragment } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { CODES } from \"../shared/codes\";\n\nconst RatingDials = props => {\n  const showButtons = CODES.map(code => {\n    return (\n      <Fragment key={code.id}>\n        <Button\n          color=\"primary\"\n          onClick={props.ratingChange.bind(null, code.id)}\n        >\n          {code.id}\n          <br />\n          <p className=\"code-desc\">{code.description}</p>\n        </Button>\n      </Fragment>\n    );\n  });\n  return <div className=\"row\">{showButtons}</div>;\n};\n\nexport default RatingDials;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  FormControl,\n  TextField,\n  InputLabel,\n  MenuItem,\n  Select,\n  Grid,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle\n} from \"@material-ui/core\";\n\nclass BeforeCodingModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      src: \"https://vimeo.com/361224968\",\n      coderName: \"\",\n      codedCouple: \"\",\n      codedPartner: \"\",\n      codedDiscussion: \"\"\n    };\n    this.onNameChange = this.onNameChange.bind(this);\n    this.onCoupleChange = this.onCoupleChange.bind(this);\n    this.onPartnerChange = this.onPartnerChange.bind(this);\n    this.onSrcChange = this.onSrcChange.bind(this);\n    this.onDiscussionChange = this.onDiscussionChange.bind(this);\n  }\n\n  onNameChange(event) {\n    this.setState({\n      coderName: event.target.value\n    });\n  }\n\n  onCoupleChange(event) {\n    this.setState({\n      codedCouple: event.target.value\n    });\n  }\n\n  onPartnerChange(event) {\n    this.setState({\n      codedPartner: event.target.value\n    });\n  }\n\n  onSrcChange(event) {\n    this.setState({\n      src: event.target.value\n    });\n  }\n\n  onDiscussionChange(event) {\n    this.setState({\n      codedDiscussion: event.target.value\n    });\n  }\n\n  startCoding() {\n    this.props.nameChange(this.state.coderName);\n    this.props.coupleChange(this.state.codedCouple);\n    this.props.partnerChange(this.state.codedPartner);\n    this.props.discussionChange(this.state.codedDiscussion);\n    this.props.srcChange(this.state.src);\n    this.props.codingStart();\n  }\n\n  render() {\n    return (\n      <div>\n        <Dialog\n          open={this.props.startModalToggle}\n          className={this.props.className}\n        >\n          <DialogTitle>Start Coding</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={3}>\n              <Grid item xs>\n                <TextField\n                  label=\"Name\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  name=\"coderName\"\n                  id=\"coderName\"\n                  onChange={event => this.onNameChange(event)}\n                />\n              </Grid>\n              <Grid item xs>\n                <TextField\n                  label=\"Couple\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  name=\"codedCouple\"\n                  id=\"codedCouple\"\n                  onChange={event => this.onCoupleChange(event)}\n                />\n              </Grid>\n              <Grid item xs>\n                <FormControl>\n                  <InputLabel shrink>Partner</InputLabel>\n                  <Select\n                    value={this.state.codedPartner}\n                    onChange={event => this.onPartnerChange(event)}\n                  >\n                    <MenuItem value=\"LEFT\">Left</MenuItem>\n                    <MenuItem value=\"RIGHT\">Right</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container spacing={3}>\n              <Grid item xs={8}>\n                <TextField\n                  label=\"Video URL\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  name=\"url\"\n                  id=\"videoUrl\"\n                  onChange={event => this.onSrcChange(event)}\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <FormControl>\n                  <InputLabel shrink>Discussion</InputLabel>\n                  <Select\n                    value={this.state.codedDiscussion}\n                    onChange={event => this.onDiscussionChange(event)}\n                  >\n                    <MenuItem value=\"EVENTS\">Events</MenuItem>\n                    <MenuItem value=\"CONFLICT\">Conflict</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.startCoding.bind(this)}\n              fullWidth\n            >\n              Start\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default BeforeCodingModal;\n","import React from \"react\";\nimport ReactExport from \"react-export-excel\";\nimport Button from \"@material-ui/core/Button\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst Download = props => {\n  let filename = String(\n    \"SPAFF_\" +\n      props.codedCouple +\n      \"_\" +\n      props.codedPartner +\n      \"_\" +\n      props.codedDiscussion +\n      \"__\" +\n      props.coderName\n  );\n  return (\n    <ExcelFile\n      filename={filename}\n      element={\n        <Button variant=\"contained\" color=\"primary\">\n          Download\n        </Button>\n      }\n    >\n      <ExcelSheet data={props.exportedRatings} name=\"Sheet\">\n        <ExcelColumn label=\"Time\" value=\"time\" />\n        <ExcelColumn label=\"1\" value=\"1\" />\n        <ExcelColumn label=\"2\" value=\"2\" />\n        <ExcelColumn label=\"3\" value=\"3\" />\n        <ExcelColumn label=\"4\" value=\"4\" />\n        <ExcelColumn label=\"5\" value=\"5\" />\n        <ExcelColumn label=\"6\" value=\"6\" />\n        <ExcelColumn label=\"7\" value=\"7\" />\n        <ExcelColumn label=\"8\" value=\"8\" />\n        <ExcelColumn label=\"9\" value=\"9\" />\n        <ExcelColumn label=\"10\" value=\"10\" />\n        <ExcelColumn label={filename} value=\"filename\" />\n      </ExcelSheet>\n    </ExcelFile>\n  );\n};\n\nexport default Download;\n","import React, { Component } from \"react\";\nimport Download from \"./DownloadFileComponent\";\nimport {\n  Typography,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst AfterCodingModal = props => {\n  const refreshBtn = (\n    <Button onClick={props.refresh}>\n      <RefreshIcon />\n    </Button>\n  );\n  return (\n    <div>\n      <Dialog open={props.endModalToggle} className={props.className}>\n        <DialogTitle>Coding Completed</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Typography variant=\"body1\">\n              {props.coderName}, you've finished rating the {props.codedPartner}{\" \"}\n              partner of couple {props.codedCouple} in their{\" \"}\n              {props.codedDiscussion} discussion. Click the button to download\n              your data file.\n            </Typography>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          {refreshBtn}\n          <Download\n            exportedRatings={props.exportedRatings}\n            coderName={props.coderName}\n            codedCouple={props.codedCouple}\n            codedPartner={props.codedPartner}\n            codedDiscussion={props.codedDiscussion}\n          />\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AfterCodingModal;\n","export var importedRatings = [];\n","export var exportedRatings = [];\n","import React, { Component, Fragment } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport RatingDials from \"./RatingDialsComponent\";\nimport BeforeCodingModal from \"./BeforeCodingComponent\";\nimport AfterCodingModal from \"./AfterCodingComponent\";\nimport { importedRatings } from \"../shared/importedRatings\";\nimport { exportedRatings } from \"../shared/exportedRatings\";\n\nclass RatingConsole extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: 0,\n      currentCode: 6,\n      src: \"\",\n      coderName: \"\",\n      codedCouple: \"\",\n      codedPartner: \"\",\n      codedDiscussion: \"\",\n      startModal: true,\n      endModal: false\n    };\n    this.Player = React.createRef();\n  }\n\n  handleRatingChange(newCode) {\n    this.setState({\n      currentCode: newCode\n    });\n  }\n\n  handleTimeChange() {\n    const Player = this.Player.current;\n    this.setState({\n      currentTime: Math.round(Player.getCurrentTime()) - 300\n    });\n    importedRatings.push(this.state);\n    for (let i = 0; i < importedRatings.length; i++) {\n      let lineRating = {};\n      lineRating[\"time\"] = importedRatings[i].currentTime;\n      for (let j = 1; j < 11; j++) {\n        if (importedRatings[i].currentCode === j) {\n          lineRating[j] = 1;\n        } else {\n          lineRating[j] = 0;\n        }\n      }\n      if (lineRating[\"time\"] > 0) {\n        exportedRatings[i] = lineRating;\n      }\n    }\n  }\n\n  handleNameChange(newName) {\n    this.setState({\n      coderName: newName\n    });\n  }\n\n  handleCoupleChange(newCouple) {\n    this.setState({\n      codedCouple: newCouple\n    });\n  }\n\n  handlePartnerChange(newPartner) {\n    this.setState({\n      codedPartner: newPartner\n    });\n  }\n\n  handleSrcChange(newSrc) {\n    this.setState({\n      src: newSrc\n    });\n  }\n\n  handleDiscussionChange(newDiscussion) {\n    this.setState({\n      codedDiscussion: newDiscussion\n    });\n  }\n\n  handleCodingStart() {\n    this.setState({\n      startModal: false\n    });\n  }\n\n  handleVideoStart() {\n    this.Player.current.seekTo(300, \"seconds\");\n  }\n\n  handleCodingEnd() {\n    this.setState({\n      endModal: true\n    });\n  }\n\n  refreshPage() {\n    window.location.reload(true);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <BeforeCodingModal\n          startModalToggle={this.state.startModal}\n          nameChange={this.handleNameChange.bind(this)}\n          coupleChange={this.handleCoupleChange.bind(this)}\n          partnerChange={this.handlePartnerChange.bind(this)}\n          srcChange={this.handleSrcChange.bind(this)}\n          discussionChange={this.handleDiscussionChange.bind(this)}\n          codingStart={this.handleCodingStart.bind(this)}\n        />\n        <div className=\"player-wrapper\">\n          <ReactPlayer\n            className=\"react-player\"\n            ref={this.Player}\n            url={this.state.src}\n            width=\"100%\"\n            height=\"100%\"\n            onStart={this.handleVideoStart.bind(this)}\n            onProgress={this.handleTimeChange.bind(this)}\n            onEnded={this.handleCodingEnd.bind(this)}\n            playsinline\n            controls\n            playing\n          />\n        </div>\n        <RatingDials ratingChange={this.handleRatingChange.bind(this)} />\n        <AfterCodingModal\n          exportedRatings={exportedRatings}\n          endModalToggle={this.state.endModal}\n          coderName={this.state.coderName}\n          codedCouple={this.state.codedCouple}\n          codedPartner={this.state.codedPartner}\n          codedDiscussion={this.state.codedDiscussion}\n          refresh={this.refreshPage}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default RatingConsole;\n","import React from \"react\";\nimport { Snackbar, SnackbarContent } from \"@material-ui/core\";\n\nconst RotateMessage = () => {\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      }}\n      open={true}\n      autoHideDuration={6000}\n    >\n      <SnackbarContent variant=\"warning\" message=\"Please rotate your device.\" />\n    </Snackbar>\n  );\n};\n\nexport default RotateMessage;\n","import React from \"react\";\nimport { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {},\n  title: {\n    color: \"white\",\n    flexGrow: 1\n  }\n});\n\nconst Navbar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography className={classes.title} variant=\"h6\">\n          SPAFF App\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Navbar;\n","import React, { Fragment } from \"react\";\nimport RatingConsole from \"./RatingConsoleComponent\";\nimport RotateMessage from \"./RotateMessageComponent\";\nimport { Container } from \"@material-ui/core\";\nimport DeviceOrientation, { Orientation } from \"react-screen-orientation\";\nimport Navbar from \"./NavigationComponent\";\n\nconst Main = props => {\n  return (\n    <Fragment>\n      <Navbar />\n      <Container maxWidth=\"lg\">\n        <DeviceOrientation>\n          <Orientation orientation=\"portrait\" alwaysRender={false}>\n            <RotateMessage />\n          </Orientation>\n          <Orientation orientation=\"landscape\" alwaysRender={true}>\n            <RatingConsole />\n          </Orientation>\n        </DeviceOrientation>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default Main;\n","import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/MainComponent\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Main />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}